services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - cache
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env

  cache:
    image: redis:latest
    ports:
      - "6379:6379"

  # Celery Worker - Aszinkron feladatok futtatása
  celery_worker:
    build: ./backend
    command: celery -A app.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - cache
    restart: unless-stopped

  # Celery Beat - Ütemezett feladatok
  celery_beat:
    build: ./backend
    command: celery -A app.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - cache
      - celery_worker
    restart: unless-stopped

  # Celery Flower - Monitoring (opcionális)
  celery_flower:
    build: ./backend
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - cache
      - celery_worker
    restart: unless-stopped

volumes:
  postgres_data: 